@charset "utf-8"; /* prevents badly encoded icons */

:root {
  --cover-height: 200px;
  --app-font: system-ui;
  --small-gap: round(up, .25em, 1px);
}

@font-face {
  font-family: "font-awesome";
  src: url("../fonts/font-awesome-free-6.4.2/fa-solid-900.woff2");
}

* {
  padding: 0%;
  margin: 0%;
  user-select: none;
  outline: none;
  font-family: var(--app-font);
  font-size: small;
}

[icon]::before {
  font-family: "font-awesome";
  font-size: smaller;
}

[icon=new]::before {
  content: "+";
  font-size: large;
}

[icon=playing]::before {
  content: "";
  font-size: larger;
}

[icon=close]::before {
  content: "";
  font-size: large;
}

[icon=hold]::before {
  content: "";
  font-size: larger;
}

[icon=left]::before {
  content: "";
  font-size: large;
}

[icon=right]::before {
  content: "";
  font-size: large;
}

body,
html {
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

body {
  background: var(--theme-main-bg)
}

header {
  display: flex;
  padding: var(--small-gap);
  gap: var(--small-gap);

  #tabs {
    --px-slide-offset: 0px;
    display: flex;
    width: 100%;
    gap: var(--small-gap);
    overflow-x: auto;

    /* allow space for tab items drop-shadow */
    padding: var(--small-gap);
    margin: calc( var(--small-gap) * -1 );

    &::-webkit-scrollbar {
      height: 0;
    }
  }

  .scrollBtn {
    display: none;
    color: var(--theme-tab-secondary-fg);
    align-self: center;
    justify-self: center;

    padding: .2em .3em;
    border-radius: .3em;

    &:hover {
      cursor: pointer;
      color: var(--theme-tab-primary-fg);
    }

    &[disabled] {
      opacity: .25;
    }
  }

  &[overflow] {
    .scrollBtn {
      display: block;
    }
  }
}

.tab,
#newTab {
  padding: .2em round(up, .3em, 1px);
  border-radius: .3em;
  white-space: nowrap;
  overflow: hidden;
  background: inherit;
  
  color: var(--theme-tab-secondary-fg);
  max-width: 14em;
  min-width: 5em;
  width: 100%;
  display: flex;
  
  &:not(.selected):hover,
  &:not(.selected):active {
    background: var(--theme-tab-secondary-bg);
  }
  
  &.selected {
    color: var(--theme-tab-primary-fg);
    background: var(--theme-tab-primary-bg);
    box-shadow: var(--theme-tab-shadow);
  }
  
  p {
    width: 100%;
    padding-left: .3em;
    text-overflow: ellipsis;
    overflow: hidden;
  }
  
  &.slide-left {
    transform: translateX( calc( var(--px-slide-offset) * -1 ) );
  }
  
  &.slide-right {
    transform: translateX(var(--px-slide-offset));
  }
  
  &.animated {
    transition: .15s;
  }
}

.tab:not(:hover, .selected)::after {
  content: "|"; /* separator */
  opacity: .3;
}

#newTab {
  --size: 1.5em;
  display: block;
  text-align: center;
  max-width: var(--size);
  min-width: var(--size);
  
  &:hover {
    color: var(--theme-tab-primary-fg);
    cursor: pointer;
  }
}

.tab button {
  font-size: x-small;
  opacity: .3;
  
  color: var(--theme-tab-primary-fg);
  background: transparent;
  
  width: 2em;
  min-width: 2em;
  
  border: none;
  border-radius: .3em;
  
  &:hover {
    background: var(--theme-tab-button-bg);
    cursor: pointer;
    opacity: 1;
  }
}

.tab:not(:hover, .selected) button.closeTab {
  display: none;
}

.tab:hover button.closeTab,
.tab.selected button.closeTab {
  margin-left: auto;
}

main {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 0px;
  display: flex;

  /* remove explorer top margin when tabs are visible for and even gap */
  header:not([style*="display: none;"]) + & viewer-component::part(explorer) {
    margin-top: 0;
  }
}

#contents {
  width: 100%;
  height: 100%;
}

action-palette {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: bounding-box;
  
  * {
    padding: 0%;
    margin: 0%;
    user-select: none;
    outline: none;
  }
  
  [icon]::before {
    font-family: "font-awesome";
    padding-top: 1px;
    padding-left: .2em;
  }
  
  [icon=history]::before {
    content: "";
    color: var(--theme-icon-history);
  }
  
  [icon=group]::before {
    content: "";
    color: var(--theme-icon-group);
  }
  
  [icon=action]::before {
    content: "";
    color: var(--theme-icon-action);
  }
  
  [icon=shortcut]::before {
    content: "";
    color: var(--theme-icon-shortcut);
  }
  
  [icon=argument]::before {
    content: "";
    color: var(--theme-icon-argument);
  }
  
  [icon=run]::before {
    content: "";
    color: var(--theme-icon-run);
  }
  
  .paletteContainer {
    display: flex;
    flex-direction: column;
    background: var(--theme-palette-bg);
    max-height: 75%;
    margin: 0.6rem;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0px 2px 5px 0px #000000ba;
  }
  
  .paletteInputContainer {
    display: flex;
    background: var(--theme-palette-input-bg);
    align-items: center;
    gap: 0.5em;
    padding: 0em 0.5em;
    border-top: solid thin #69696969;
    pointer-events: auto;
  }
  
  input {
    font-family: var(--app-font);
    color: var(--theme-palette-input-fg);
    background: inherit;
    width: 100%;
    padding: 0em .4em;
    border: none;
  }
  
  item-list {
    display: flex;
    flex-direction: column-reverse;
    margin: 4px;
    overflow: auto;
  }
  
  .pageContainer {
    color: var(--theme-palette-secondary-fg);
    max-height: 100%;
    padding-right: 4px;
    overflow-wrap: anywhere;
    overflow: hidden auto;
    pointer-events: auto;
  }
  
  .itemListPage > * {
    display: flex;
    align-items: center;
    column-gap: 1em;
    padding: 3px;
    
    &:not(.selected) > p:first-child {
      display: flex;
      gap: 1em;
      white-space: nowrap;
      
      &[desc]:after {
        font-family: "font-awesome";
        content: '';
        align-self: center;
        padding-top: 1px;
        opacity: .2;
      }
    }
    
    &.selected {
      color: var(--theme-palette-primary-fg);
      background: var(--theme-palette-primary-bg);
      border-radius: .2em;
      
      > p:first-child {
        display: flex;
        flex-direction: column;
        gap: 0;
        white-space: normal;
        
        &[desc]:after {
          content: attr(desc);
          opacity: .7;
        }
      }
    }
  }
  
  .accelerators {
    color: var(--theme-palette-tag-fg);
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-end;
    gap: .5em;
    margin-right: 2px;
    margin-left: auto;
  }
  
  .itemTag {
    font-family: var(--app-font);
    font-size: x-small;
    color: var(--theme-palette-tag-fg);
    background: var(--theme-palette-tag-bg);
    padding: 0em .5em;
    border: none;
    border-radius: .2em;
    overflow-wrap: break-word;
    
    button&:hover {
      cursor: pointer;
    }
  }
  
  .paginator {
    display: flex;
    justify-content: center;
    gap: 2em;
    pointer-events: auto;
    
    * {
      color: var(--theme-palette-input-fg);
      background: inherit;
      border: none;
      user-select: auto;
    }
  }
  
  /* scroll styling */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  ::-webkit-scrollbar-corner {
    background: var(--theme-scrollbar-bg);
    border-radius: 100%;
  }
  ::-webkit-scrollbar-track {
    background: transparent;
  }
  ::-webkit-scrollbar-thumb {
    background: var(--theme-scrollbar-bg);
    border-radius: 10px;
  }
  ::-webkit-scrollbar-thumb:hover {
    background: var(--theme-scrollbar-fg);
  }
}

#notifier {
  position: absolute;
  pointer-events: none;
  width: 100%;
  height: 100%;
  z-index: 3;
  overflow: hidden;

  .tabContext {
    display: none;

    &[active] {
      display: block;
    }

    .notification {
      margin: .4em auto;
      padding: .5em 1em; 
      border-radius: 1em;
      width: fit-content;
      box-shadow: var(--theme-notification-shadow);

      background: var(--theme-notification-bg);
      color: var(--theme-notification-fg);
    }
  }
}

#bar {
  background: var(--theme-status-bg);
  color: var(--theme-status-fr);
  
  display: flex;
  justify-content: space-between;
  transition: .1s;
  padding: 0em .2em;
  gap: 2em;

  & > * {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: fit-content;
    font-size: inherit;

    &#barInfo {
      min-width: fit-content;
    }
  } 
}
